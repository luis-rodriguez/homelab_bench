# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    # run on pushes to main or master (adjust if your default branch is different)
    branches: ["main", "master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Cache gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('docs/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install dependencies (if Gemfile present)
        working-directory: ./docs
        run: |
          if [ -f Gemfile ]; then
            bundle config set --local path 'vendor/bundle'
            bundle install --jobs 4 --retry 3
          else
            echo "No Gemfile in docs/; skipping bundle install"
          fi

      - name: Build Jekyll site
        working-directory: ./docs
        run: |
          if [ -f Gemfile ]; then
            bundle exec jekyll build --destination _site
          else
            jekyll build --source . --destination _site || true
          fi
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # explicitly upload the generated site folder
          path: ./_site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
